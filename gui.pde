/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void turn_on_lights(GImageButton source, GEvent event) { //_CODE_:light:786459:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:light:786459:

public void open_trunk(GImageButton source, GEvent event) { //_CODE_:trunk:259613:
  println("imgButton2 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:trunk:259613:

public void change_brghtnss(GCustomSlider source, GEvent event) { //_CODE_:brghtnss:905206:
  println("brghtnss - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:brghtnss:905206:

public void imgButton3_click1(GImageButton source, GEvent event) { //_CODE_:imgButton3:931514:
  println("imgButton3 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton3:931514:

public void make_sleep(GImageButton source, GEvent event) { //_CODE_:sleep:502431:
  println("sleep - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:sleep:502431:

public void check_temp(GImageButton source, GEvent event) { //_CODE_:temp:560435:
  println("imgButton4 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:temp:560435:

synchronized public void win_draw2(PApplet appc, GWinData data) { //_CODE_:show_temp:401296:
  appc.background(230);
} //_CODE_:show_temp:401296:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.ORANGE_SCHEME);
  G4P.setCursor(MOVE);
  surface.setTitle("Claire");
  light = new GImageButton(this, 257, 171, 78, 54, new String[] { "bulb.png", "bulb.png", "redbulb.png" } );
  light.addEventHandler(this, "turn_on_lights");
  trunk = new GImageButton(this, 389, 172, 83, 56, new String[] { "trunk.png", "trunk.png", "gtrunk.png" } );
  trunk.addEventHandler(this, "open_trunk");
  brghtnss = new GCustomSlider(this, 57, 23, 219, 29, "red_yellow18px");
  brghtnss.setRotation(PI/2, GControlMode.CORNER);
  brghtnss.setLimits(2, 0, 5);
  brghtnss.setNbrTicks(6);
  brghtnss.setStickToTicks(true);
  brghtnss.setShowTicks(true);
  brghtnss.setNumberFormat(G4P.INTEGER, 0);
  brghtnss.setLocalColorScheme(GCScheme.SCHEME_10);
  brghtnss.setOpaque(false);
  brghtnss.addEventHandler(this, "change_brghtnss");
  imgButton3 = new GImageButton(this, 25, 261, 36, 34, new String[] { "sun.png", "sun.png", "sun.png" } );
  imgButton3.addEventHandler(this, "imgButton3_click1");
  sleep = new GImageButton(this, 386, 18, 92, 60, new String[] { "gpower.png", "redpower.png", "redpower.png" } );
  sleep.addEventHandler(this, "make_sleep");
  temp = new GImageButton(this, 126, 31, 83, 56, new String[] { "temp.png", "temp.png", "gtemp.png" } );
  temp.addEventHandler(this, "check_temp");
  show_temp = GWindow.getWindow(this, "Inside Temp.", 0, 0, 240, 120, JAVA2D);
  show_temp.noLoop();
  show_temp.setActionOnClose(G4P.CLOSE_WINDOW);
  show_temp.addDrawHandler(this, "win_draw2");
  show_temp.loop();
}

// Variable declarations 
// autogenerated do not edit
GImageButton light; 
GImageButton trunk; 
GCustomSlider brghtnss; 
GImageButton imgButton3; 
GImageButton sleep; 
GImageButton temp; 
GWindow show_temp;
